---
- name: install | create cozy group
  group:
    name: cozy
    state: present

- name: install | create cozy user
  user:
    name: cozy
    shell: /bin/bash
    group: cozy
    createhome: no
    state: present

- name: install | check if cozy is already installed
  stat:
    path: "{{ cozy_binary }}"
  register: cozy_binary_stat

- set_fact:
    cozy_installed: "{{ cozy_binary_stat.stat.exists}}"

- name: install | download cosy-stack
  get_url:
    url: "{{ cozy_download_url }}"
    dest: "{{ cozy_binary }}"
    mode: "u+rwx"
    owner: cozy
    group: cozy
  when: not cozy_install_from_sources and not cozy_installed

- name: install dependencies so as to build from sources
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ cozy_install_from_sources_packages }}"
  when: cozy_install_from_sources and not cozy_installed

- name: install golang
  unarchive:
    src: "{{ cozy_install_from_sources_golang_url }}"
    dest: "/usr/local"
    remote_src: True
    creates: /usr/local/go
  when: cozy_install_from_sources and not cozy_installed

- name: build cozy-stack from sources
  shell: "PATH=$PATH:/usr/local/go/bin go get -u github.com/cozy/cozy-stack"
  args:
    chdir: /root
  when: cozy_install_from_sources and not cozy_installed

- name: deploy fresh cozy-stack
  copy:
    src: "/root/go/bin/cozy-stack"
    dest: "{{ cozy_binary }}"
    mode: "u+xw,g+rx,o+rx"
    remote_src: True
  when: cozy_install_from_sources and not cozy_installed

- name: create log directory
  file:
    path: /var/log/cozy
    state: directory
    owner: cozy
    group: cozy
